name: Build and Push Docker Image

on:
  push:
    branches: [ "master" ]  # 仅main分支推送时构建并推送
  pull_request:
    branches: [ "master" ]  # PR到main时构建但不推送

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}  # 原始值：waterhorse11/fuclaude
  CLEAN_IMAGE_NAME: ${{ github.repository_name }}  # 清理后：fuclaude

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Git LFS
        run: |
          sudo apt-get update
          sudo apt-get install -y git-lfs
          
      - name: Pull Git LFS files
        run: git lfs pull

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'  # PR时不推送
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          # 修正镜像路径：ghcr.io/用户名/镜像名
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.CLEAN_IMAGE_NAME }}
          tags: |
            type=ref,event=branch  # 分支名作为标签（如main）
            type=semver,pattern={{version}}  # 版本标签（如v1.0.0）
            type=semver,pattern={{major}}.{{minor}}  # 主版本+次版本（如1.0）
            type=semver,pattern={{major}}  # 主版本（如1）
          labels: |
            org.opencontainers.image.description=OpenAI API Compatible Server
            org.opencontainers.image.source=${{ github.event.repository.html_url }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          file: Dockerfile
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}  # PR时不推送
          load: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ github.workflow }}
          cache-to: type=gha,scope=${{ github.workflow }}
