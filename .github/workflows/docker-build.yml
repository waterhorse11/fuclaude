name: Build and Push Docker Image

on:
  push:
    branches: [ "master" ]  # 按你实际推送分支改，比如 main 或 master
  pull_request:
    branches: [ "master" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: fuclaude  # 简洁仓库名，避免路径混乱

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true  # 启用 LFS 拉取，替代单独的 git lfs pull 步骤

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch  # 分支名作为标签，如 master
            type=semver,pattern={{version}}
            # 其他标签规则按需加
          labels: |
            org.opencontainers.image.description=OpenAI API Compatible Server
            org.opencontainers.image.source=${{ github.event.repository.html_url }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          file: Dockerfile
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
